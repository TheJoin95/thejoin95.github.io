<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TheJoin's Blog</title>
    <description>TheJoin | Programmer blog</description>
    <link>https://blog.thejoin.it/</link>
    <atom:link href="https://blog.thejoin.it/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Automatically setting up and connect Raspberry Pi to a Wifi network</title>
        <description>&lt;p&gt;So you have bought your Raspberry and you want to figure out how it is working! If you wanna be cool, you don’t install GUI and do your things only by CLI and via SSH… but! You need a connection to your local network!! How connect automatically our raspberry on boot to our wifi network?&lt;/p&gt;

&lt;p&gt;Easy, with cron (or service) and via WPA config.
Here is how.&lt;/p&gt;

&lt;p&gt;First of all, you need to identify your network name.
If you boot Raspbian to desktop, you can launch the wpa_gui (WiFi config) application and click ‘Scan’. You’ll find a list that has your network too with all flags you need.&lt;/p&gt;

&lt;p&gt;You know, I don’t like this solution so, if you wanna be cool, you can do like this:
&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo iwlist wlan0 scan&lt;/code&gt; and find out your wifi ESSID and proto.&lt;/p&gt;

&lt;p&gt;SSID is your network name.
After you found it, you need to update your /etc/wpa_supplicant/wpa_supplicant.conf file.
Here is an example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;YOUR_NETWORK_NAME&quot;&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;psk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;YOUR_NETWORK_PASSWORD&quot;&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;proto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RSN
	&lt;span class=&quot;nv&quot;&gt;priority&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
	&lt;span class=&quot;nv&quot;&gt;key_mgmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WPA-PSK
	&lt;span class=&quot;nv&quot;&gt;pairwise&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;CCMP
	&lt;span class=&quot;nv&quot;&gt;auth_alg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OPEN
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;psk is your network password. You need to write it there.
The other parameters are network specific, I can’t tell you what you need.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;proto could be either RSN (WPA2) or WPA (WPA1).&lt;/li&gt;
  &lt;li&gt;key_mgmt could be either WPA-PSK (most probably) or WPA-EAP (enterprise networks)&lt;/li&gt;
  &lt;li&gt;pairwise could be either CCMP (WPA2) or TKIP (WPA1)&lt;/li&gt;
  &lt;li&gt;auth_alg is most probably OPEN, other options are LEAP and SHARED&lt;/li&gt;
  &lt;li&gt;priority is an incremental flag because you can specify more network connetions (just by duplicate the “network object”). Priority is an ascending field.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After doing this you can run &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo ifdown wlan0 and sudo ifup wlan0&lt;/code&gt; and verify your connection by ping another ip.
Now you have connected your RPi via DHCP. What if you wanna have a static ip?
Here we go.&lt;/p&gt;

&lt;p&gt;We need to update our /etc/dhcpd.conf (for info about this file run &lt;code class=&quot;highlighter-rouge&quot;&gt;man dhcpcd.conf&lt;/code&gt;) as the follow:&lt;/p&gt;

&lt;p&gt;/etc/dhcpcd.conf:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# A sample configuration for dhcpcd.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# See dhcpcd.conf(5) for details.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Allow users of this group to interact with dhcpcd via the control socket.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#controlgroup wheel&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Inform the DHCP server of our hostname for DDNS.&lt;/span&gt;
hostname

&lt;span class=&quot;c&quot;&gt;# Use the hardware address of the interface for the Client ID.&lt;/span&gt;
clientid
&lt;span class=&quot;c&quot;&gt;# or&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Use the same DUID + IAID as set in DHCPv6 for DHCPv4 ClientID as per RFC4361.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#duid&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Persist interface configuration when dhcpcd exits.&lt;/span&gt;
persistent

&lt;span class=&quot;c&quot;&gt;# Rapid commit support.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Safe to enable by default because it requires the equivalent option set&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# on the server to actually work.&lt;/span&gt;
option rapid_commit

&lt;span class=&quot;c&quot;&gt;# A list of options to request from the DHCP server.&lt;/span&gt;
option domain_name_servers, domain_name, domain_search, host_name
option classless_static_routes
&lt;span class=&quot;c&quot;&gt;# Most distributions have NTP support.&lt;/span&gt;
option ntp_servers
&lt;span class=&quot;c&quot;&gt;# Respect the network MTU.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Some interface drivers reset when changing the MTU so disabled by default.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#option interface_mtu&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# A ServerID is required by RFC2131.&lt;/span&gt;
require dhcp_server_identifier

&lt;span class=&quot;c&quot;&gt;# Generate Stable Private IPv6 Addresses instead of hardware based ones&lt;/span&gt;
slaac private

&lt;span class=&quot;c&quot;&gt;# A hook script is provided to lookup the hostname if not set by the DHCP&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# server, but it should not be run by default.&lt;/span&gt;
nohook lookup-hostname

&lt;span class=&quot;c&quot;&gt;# look, I configured the static also per ethernet connection (just in case)&lt;/span&gt;
interface eth0

static &lt;span class=&quot;nv&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.10/24
static &lt;span class=&quot;nv&quot;&gt;routers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.1
static &lt;span class=&quot;nv&quot;&gt;domain_name_servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.1

&lt;span class=&quot;c&quot;&gt;# here is for wifi interface&lt;/span&gt;
interface wlan0

&lt;span class=&quot;c&quot;&gt;# ip/subnet class&lt;/span&gt;
static &lt;span class=&quot;nv&quot;&gt;ip_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.10/24
static &lt;span class=&quot;nv&quot;&gt;routers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.1
static &lt;span class=&quot;nv&quot;&gt;domain_name_servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s pretty simply here, you need just specify your static ip and gateway. Then reboot your wifi connection.&lt;/p&gt;

&lt;p&gt;So, now you have configured your RPi with your wifi network and static ip but… what if the wifi network goes down and reup after 5min? You need to re-connect manually…&lt;/p&gt;

&lt;p&gt;BUT! If you wanna be a cool guy:
check every minute (via crontab) if we are still connected to our wifi network and it’s all up:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;ifconfig wlan0 | grep -q &lt;span class=&quot;s2&quot;&gt;&quot;inet addr:&quot;&lt;/span&gt; ; &lt;span class=&quot;k&quot;&gt;then
   &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;connected&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
   &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Network connection down! Attempting reconnection.&quot;&lt;/span&gt;
   ifup --force wlan0
   sleep 10
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You need to program this script in your crontab like this:
&lt;code class=&quot;highlighter-rouge&quot;&gt;*/10 *    * * *   root    /bin/bash /home/pi/check-wifi.sh&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 May 2017 00:00:00 +0200</pubDate>
        <link>https://blog.thejoin.it/2017-05-17-automatically-connect-wifi-raspberry-dhcp-and-staticip.html</link>
        <guid isPermaLink="true">https://blog.thejoin.it/2017-05-17-automatically-connect-wifi-raspberry-dhcp-and-staticip.html</guid>
      </item>
    
      <item>
        <title>How to backup all collections from mongodb (raspberry)</title>
        <description>&lt;p&gt;After some problems with my raspberry power supply and mongo 3.0 I decided to make a dayly backup.
Sometimes happened that, after an unexpected shutdown (for an high load average and not too much power), some mongo collections may be broken. If it’ll happen without any backup, the only words you can say are: I’m fuck.&lt;/p&gt;

&lt;p&gt;Yeah, I know.. if you install mongo on a 32bit system with only 1GB ram (Raspberry Pi 3), you are probabily (like me) mad.
But! It’s useful for some testing or a micro-system.&lt;/p&gt;

&lt;h2 id=&quot;so-the-solution&quot;&gt;So.. the solution&lt;/h2&gt;

&lt;p&gt;One of the idea that I’ve got is make a dayly backup. I use 3.0 mongo version, but it will be ok for &amp;gt; 3.0 version.
&lt;strong&gt;NOTE: you need to install mongotools.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;APP_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;raspberry&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;MONGO_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;MONGO_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;27017&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;date +%F-%H%M&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;MONGODUMP_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/bin/mongodump&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BACKUPS_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/pi/dump&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BACKUP_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$APP_NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TIMESTAMP&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$MONGODUMP_PATH&lt;/span&gt;

mkdir -p &lt;span class=&quot;nv&quot;&gt;$BACKUPS_DIR&lt;/span&gt;
mv dump_file &lt;span class=&quot;nv&quot;&gt;$BACKUP_NAME&lt;/span&gt;
tar -zcvf &lt;span class=&quot;nv&quot;&gt;$BACKUPS_DIR&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$BACKUP_NAME&lt;/span&gt;.tgz &lt;span class=&quot;nv&quot;&gt;$BACKUP_NAME&lt;/span&gt;
rm -rf &lt;span class=&quot;nv&quot;&gt;$BACKUP_NAME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The workflow is:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Launch mongodump in the directory of the script&lt;/li&gt;
  &lt;li&gt;Create the directory (if not exist) for the backup’s files&lt;/li&gt;
  &lt;li&gt;Move “dump_file” (created by mongodump cmd) to our backup name file&lt;/li&gt;
  &lt;li&gt;make a tar (for storage saving) of the file and then remove the old one&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You need to program this script in your crontab like this:
&lt;code class=&quot;highlighter-rouge&quot;&gt;30 3    * * *   root    /bin/bash /home/pi/mongo.sh &amp;gt; /tmp/mongodump.log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note: for restore the collections you need to tar the file then to mongorestore&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Feb 2017 00:00:00 +0100</pubDate>
        <link>https://blog.thejoin.it/how-to-backup-all-collections-from-mongodb-on-raspberry.html</link>
        <guid isPermaLink="true">https://blog.thejoin.it/how-to-backup-all-collections-from-mongodb-on-raspberry.html</guid>
      </item>
    
      <item>
        <title>Example Post</title>
        <description>&lt;p&gt;post di test, ok?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/image-2.png&quot; alt=&quot;sample post&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;header-1&quot;&gt;Header 1&lt;/h1&gt;

&lt;h2 id=&quot;header-2&quot;&gt;Header 2&lt;/h2&gt;

&lt;h3 id=&quot;header-3&quot;&gt;Header 3&lt;/h3&gt;

&lt;h4 id=&quot;header-4&quot;&gt;Header 4&lt;/h4&gt;

&lt;h5 id=&quot;header-5&quot;&gt;Header 5&lt;/h5&gt;

&lt;h6 id=&quot;header-6&quot;&gt;Header 6&lt;/h6&gt;

&lt;h2 id=&quot;paragraphs&quot;&gt;Paragraphs&lt;/h2&gt;

&lt;p&gt;These are sample paragraphs showing &lt;em&gt;italics&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt; text style. Here is an unordered  list&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;Item 2&lt;/li&gt;
  &lt;li&gt;Item 3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and an ordered list&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Item 1&lt;/li&gt;
  &lt;li&gt;Item 2&lt;/li&gt;
  &lt;li&gt;Item 3&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;A blockquote would look like this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;another one&lt;/p&gt;

  &lt;p&gt;with multiple lines&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.&lt;/p&gt;

&lt;p&gt;Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus.&lt;/p&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.&lt;/p&gt;

&lt;p&gt;A code block would look like this.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;About&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Contact&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Project&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.&lt;/p&gt;

&lt;p&gt;Use below code to show &lt;strong&gt;Table of Contents&lt;/strong&gt; on a page&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Do&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;displayed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:toc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Sun, 07 Sep 2014 00:00:00 +0200</pubDate>
        <link>https://blog.thejoin.it/example.html</link>
        <guid isPermaLink="true">https://blog.thejoin.it/example.html</guid>
      </item>
    
  </channel>
</rss>