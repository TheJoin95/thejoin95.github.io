{"version":3,"sources":["webpack:///./public/articles/2017-05-17-automatically-connect-wifi-raspberry-dhcp-and-staticip.md"],"names":["code","module","exports"],"mappings":"iGACA,IAAIA,EAAO,89MAEXC,EAAOC,QAAUF","file":"js/chunk-2d0de2f3.2b4689c6.js","sourcesContent":["// Module\nvar code = \"<hr> <p>title: Automatically setting up and connect Raspberry Pi to a Wifi network description: Automatically setting up your raspberry to connect to your wifi, with a static ip or DHCP! Only via SSH tunnel! permalink: automatically-connect-wifi-raspberry-dhcp-and-staticip icon: 17HaOLLOXYM date: 2017-05-17 category: raspberry tags: [raspberry, wifi, static, dhcp]</p> <hr> <h1 id=\\\"automatically-setting-up-and-connect-raspberry-pi-to-a-wifi-network\\\">Automatically setting up and connect Raspberry Pi to a Wifi network</h1> <div class=\\\"mx-auto\\\"> <img class=\\\"max-w-full\\\" src=\\\"https://source.unsplash.com/17HaOLLOXYM/960x680\\\"/> </div> <p>So you have bought your Raspberry and you want to figure out how it is working! If you wanna be cool, you don&#39;t install GUI and do your things only by CLI and via SSH... but! You need a connection to your local network!! How connect automatically our raspberry on boot to our wifi network?</p> <p>Easy, with cron (or service) and via WPA config. Here is how.</p> <p>First of all, you need to identify your network name. If you boot Raspbian to desktop, you can launch the wpa_gui (WiFi config) application and click &#39;Scan&#39;. You&#39;ll find a list that has your network too with all flags you need. </p> <p>You know, I don&#39;t like this solution so, if you wanna be cool, you can do like this: <code>sudo iwlist wlan0 scan</code> and find out your wifi ESSID and proto.</p> <p>SSID is your network name. After you found it, you need to update your /etc/wpa_supplicant/wpa_supplicant.conf file. Here is an example:</p> <p>{% highlight bash %}</p> <p>network={ ssid=&quot;YOUR_NETWORK_NAME&quot; psk=&quot;YOUR_NETWORK_PASSWORD&quot; proto=RSN priority=1 key_mgmt=WPA-PSK pairwise=CCMP auth_alg=OPEN }</p> <p>{% endhighlight %}</p> <p>psk is your network password. You need to write it there. The other parameters are network specific, I can&#39;t tell you what you need.</p> <ul> <li>proto could be either RSN (WPA2) or WPA (WPA1).</li> <li>key_mgmt could be either WPA-PSK (most probably) or WPA-EAP (enterprise networks)</li> <li>pairwise could be either CCMP (WPA2) or TKIP (WPA1)</li> <li>auth_alg is most probably OPEN, other options are LEAP and SHARED</li> <li>priority is an incremental flag because you can specify more network connetions (just by duplicate the &quot;network object&quot;). Priority is an ascending field.</li> </ul> <p>After doing this you can run <code>sudo ifdown wlan0 and sudo ifup wlan0</code> and verify your connection by ping another ip. Now you have connected your RPi via DHCP. What if you wanna have a static ip? Here we go.</p> <p>We need to update our /etc/dhcpd.conf (for info about this file run <code>man dhcpcd.conf</code>) as the follow:</p> <p>/etc/dhcpcd.conf:</p> <p>{% highlight bash %}</p> <h1 id=\\\"a-sample-configuration-for-dhcpcd\\\">A sample configuration for dhcpcd.</h1> <h1 id=\\\"see-dhcpcdconf5-for-details\\\">See dhcpcd.conf(5) for details.</h1> <h1 id=\\\"allow-users-of-this-group-to-interact-with-dhcpcd-via-the-control-socket\\\">Allow users of this group to interact with dhcpcd via the control socket.</h1> <p>#controlgroup wheel</p> <h1 id=\\\"inform-the-dhcp-server-of-our-hostname-for-ddns\\\">Inform the DHCP server of our hostname for DDNS.</h1> <p>hostname</p> <h1 id=\\\"use-the-hardware-address-of-the-interface-for-the-client-id\\\">Use the hardware address of the interface for the Client ID.</h1> <p>clientid</p> <h1 id=\\\"or\\\">or</h1> <h1 id=\\\"use-the-same-duid--iaid-as-set-in-dhcpv6-for-dhcpv4-clientid-as-per-rfc4361\\\">Use the same DUID + IAID as set in DHCPv6 for DHCPv4 ClientID as per RFC4361.</h1> <p>#duid</p> <h1 id=\\\"persist-interface-configuration-when-dhcpcd-exits\\\">Persist interface configuration when dhcpcd exits.</h1> <p>persistent</p> <h1 id=\\\"rapid-commit-support\\\">Rapid commit support.</h1> <h1 id=\\\"safe-to-enable-by-default-because-it-requires-the-equivalent-option-set\\\">Safe to enable by default because it requires the equivalent option set</h1> <h1 id=\\\"on-the-server-to-actually-work\\\">on the server to actually work.</h1> <p>option rapid_commit</p> <h1 id=\\\"a-list-of-options-to-request-from-the-dhcp-server\\\">A list of options to request from the DHCP server.</h1> <p>option domain_name_servers, domain_name, domain_search, host_name option classless_static_routes</p> <h1 id=\\\"most-distributions-have-ntp-support\\\">Most distributions have NTP support.</h1> <p>option ntp_servers</p> <h1 id=\\\"respect-the-network-mtu\\\">Respect the network MTU.</h1> <h1 id=\\\"some-interface-drivers-reset-when-changing-the-mtu-so-disabled-by-default\\\">Some interface drivers reset when changing the MTU so disabled by default.</h1> <p>#option interface_mtu</p> <h1 id=\\\"a-serverid-is-required-by-rfc2131\\\">A ServerID is required by RFC2131.</h1> <p>require dhcp_server_identifier</p> <h1 id=\\\"generate-stable-private-ipv6-addresses-instead-of-hardware-based-ones\\\">Generate Stable Private IPv6 Addresses instead of hardware based ones</h1> <p>slaac private</p> <h1 id=\\\"a-hook-script-is-provided-to-lookup-the-hostname-if-not-set-by-the-dhcp\\\">A hook script is provided to lookup the hostname if not set by the DHCP</h1> <h1 id=\\\"server-but-it-should-not-be-run-by-default\\\">server, but it should not be run by default.</h1> <p>nohook lookup-hostname</p> <h1 id=\\\"look-i-configured-the-static-also-per-ethernet-connection-just-in-case\\\">look, I configured the static also per ethernet connection (just in case)</h1> <p>interface eth0</p> <p>static ip_address=192.168.1.10/24 static routers=192.168.1.1 static domain_name_servers=192.168.1.1</p> <h1 id=\\\"here-is-for-wifi-interface\\\">here is for wifi interface</h1> <p>interface wlan0</p> <h1 id=\\\"ipsubnet-class\\\">ip/subnet class</h1> <p>static ip_address=192.168.1.10/24 static routers=192.168.1.1 static domain_name_servers=192.168.1.1</p> <p>{% endhighlight %}</p> <p>It&#39;s pretty simply here, you need just specify your static ip and gateway. Then reboot your wifi connection.</p> <p>So, now you have configured your RPi with your wifi network and static ip but... what if the wifi network goes down and reup after 5min? You need to re-connect manually...</p> <p>BUT! If you wanna be a cool guy: check every minute (via crontab) if we are still connected to our wifi network and it&#39;s all up:</p> <p>{% highlight bash %} #!/bin/bash</p> <p>if ifconfig wlan0 | grep -q &quot;inet addr:&quot; ; then echo &quot;connected&quot; else echo &quot;Network connection down! Attempting reconnection.&quot; ifup --force wlan0 sleep 10 fi {% endhighlight %}</p> <p>You need to program this script in your crontab like this: <code>*/10 * * * * root /bin/bash /home/pi/check-wifi.sh</code></p> \";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}